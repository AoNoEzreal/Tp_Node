document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\ybett\\testsProf\\Tp_Node\\src\\book.repository.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":6,"line":12},"start":{"column":17,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"0","location":{"end":{"column":6,"line":8},"start":{"column":21,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":28,"line":11},"start":{"column":21,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3","location":{"end":{"column":6,"line":19},"start":{"column":21,"line":17}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"4","location":{"end":{"column":35,"line":18},"start":{"column":28,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"5","location":{"end":{"column":6,"line":30},"start":{"column":21,"line":24}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"7","location":{"end":{"column":10,"line":28},"start":{"column":54,"line":26}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":28,"line":26},"start":{"column":21,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":6,"line":38},"start":{"column":29,"line":36}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"9","location":{"end":{"column":35,"line":37},"start":{"column":28,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":58,"line":37},"start":{"column":42,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"11","location":{"end":{"column":6,"line":87},"start":{"column":40,"line":59}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"12","location":{"end":{"column":42,"line":60},"start":{"column":35,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"13","location":{"end":{"column":67,"line":60},"start":{"column":51,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"14","location":{"end":{"column":31,"line":61},"start":{"column":13,"line":61}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"15","location":{"end":{"column":31,"line":61},"start":{"column":13,"line":61}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"16","location":{"end":{"column":31,"line":61},"start":{"column":13,"line":61}},"mutatorName":"BinaryExpression","replacement":"books.length !== 0","status":"Killed"},{"id":"17","location":{"end":{"column":10,"line":63},"start":{"column":33,"line":61}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"18","location":{"end":{"column":56,"line":62},"start":{"column":19,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"19","location":{"end":{"column":10,"line":85},"start":{"column":31,"line":71}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"20","location":{"end":{"column":57,"line":74},"start":{"column":21,"line":74}},"mutatorName":"BinaryExpression","replacement":"new Date(book.added_at).getMonth() - 1","status":"Killed"},{"id":"21","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":76}},"mutatorName":"BinaryExpression","replacement":"new Date(book.added_at).getFullYear() === year || new Date(book.added_at).getMonth() + 1 === month","status":"Killed"},{"id":"22","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":76}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"23","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":76}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"24","location":{"end":{"column":63,"line":76},"start":{"column":17,"line":76}},"mutatorName":"BinaryExpression","replacement":"new Date(book.added_at).getFullYear() !== year","status":"Killed"},{"id":"25","location":{"end":{"column":63,"line":76},"start":{"column":17,"line":76}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"26","location":{"end":{"column":63,"line":76},"start":{"column":17,"line":76}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"27","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":78}},"mutatorName":"BinaryExpression","replacement":"new Date(book.added_at).getMonth() + 1 !== month","status":"Killed"},{"id":"28","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":78}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"29","location":{"end":{"column":63,"line":78},"start":{"column":17,"line":78}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"30","location":{"end":{"column":53,"line":78},"start":{"column":17,"line":78}},"mutatorName":"BinaryExpression","replacement":"new Date(book.added_at).getMonth() - 1","status":"Killed"},{"id":"31","location":{"end":{"column":102,"line":81},"start":{"column":17,"line":81}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"32","location":{"end":{"column":102,"line":81},"start":{"column":17,"line":81}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"33","location":{"end":{"column":102,"line":81},"start":{"column":17,"line":81}},"mutatorName":"BinaryExpression","replacement":"results.filter(result => result.year === year && result.month === month).length !== 0","status":"Killed"},{"id":"34","location":{"end":{"column":88,"line":81},"start":{"column":42,"line":81}},"mutatorName":"BinaryExpression","replacement":"result.year === year || result.month === month","status":"Killed"},{"id":"35","location":{"end":{"column":88,"line":81},"start":{"column":42,"line":81}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"36","location":{"end":{"column":88,"line":81},"start":{"column":42,"line":81}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"37","location":{"end":{"column":62,"line":81},"start":{"column":42,"line":81}},"mutatorName":"BinaryExpression","replacement":"result.year !== year","status":"Killed"},{"id":"38","location":{"end":{"column":62,"line":81},"start":{"column":42,"line":81}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"39","location":{"end":{"column":62,"line":81},"start":{"column":42,"line":81}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"40","location":{"end":{"column":88,"line":81},"start":{"column":66,"line":81}},"mutatorName":"BinaryExpression","replacement":"result.month !== month","status":"Killed"},{"id":"41","location":{"end":{"column":88,"line":81},"start":{"column":66,"line":81}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"42","location":{"end":{"column":88,"line":81},"start":{"column":66,"line":81}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"43","location":{"end":{"column":14,"line":84},"start":{"column":104,"line":81}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"44","location":{"end":{"column":68,"line":83},"start":{"column":30,"line":83}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"class BookRepository {\n\n    /**\n     * @param db\n     */\n    constructor(db) {\n        this.db = db;\n    }\n\n    save (book) {\n        this.db.get('books').push(book).write();\n    }\n\n    /**\n     * Nombre total de livre\n     */\n    getTotalCount() {\n        return this.db.get('books').size().value();\n    }\n\n    /**\n     * Somme du prix de tous les livre\n     */\n    getTotalPrice() {\n        let totalPrice = 0;\n        this.db.get('books').value().forEach(book => {\n            totalPrice += book.price;\n        });\n        return totalPrice;\n    }\n\n\n    /**\n     * Retourne un livre\n     */\n    getBookByName(bookName) {\n        return this.db.get('books').find({name: bookName}).value();\n    }\n\n    /**\n     * Nombre de livre ajoutÃ© par mois\n     *\n     *  [\n     *      {\n     *          year: 2017,\n     *          month, 2,\n     *          count, 129,\n     *          count_cumulative: 129\n     *      },\n     *      {\n     *          year: 2017,\n     *          month, 3,\n     *          count, 200,\n     *          count_cumulative: 329\n     *      },\n     *      ....\n     *  ]\n     */\n    getCountBookAddedByMonth(bookName) {\n        const books = this.db.get('books').filter({name: bookName}).value();\n        if (books.length === 0) {\n            throw 'Book is not present in the database';\n        }\n\n        const results = [];\n        let year;\n        let month;\n        let count = 0;\n        let count_cumulative = 0;\n\n        books.forEach(book => {\n            count = 0;\n            year = new Date(book.added_at).getFullYear();\n            month = new Date(book.added_at).getMonth()+1;\n            count = books.filter(book =>\n                new Date(book.added_at).getFullYear() === year\n                &&\n                new Date(book.added_at).getMonth()+1 === month\n            ).length;\n\n            if (results.filter(result => result.year === year && result.month === month).length === 0) {\n                count_cumulative += count;\n                results.push({year, month, count, count_cumulative});\n            }\n        });\n        return results;\n    }\n\n}\n\n\nmodule.exports = BookRepository;"},"C:\\Users\\ybett\\testsProf\\Tp_Node\\src\\db.js":{"language":"javascript","mutants":[{"id":"45","location":{"end":{"column":26,"line":1},"start":{"column":19,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"46","location":{"end":{"column":49,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"47","location":{"end":{"column":37,"line":4},"start":{"column":28,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"48","location":{"end":{"column":25,"line":8},"start":{"column":13,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"var low = require('lowdb');\nvar FileSync = require('lowdb/adapters/FileSync');\n\nvar adapter = new FileSync('db.json');\nvar db = low(adapter);\n\n// Set some defaults\ndb.defaults({ books: []})\n    .write();\n\nmodule.exports = db;"},"C:\\Users\\ybett\\testsProf\\Tp_Node\\src\\interval.js":{"language":"javascript","mutants":[{"id":"49","location":{"end":{"column":6,"line":5},"start":{"column":29,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"50","location":{"end":{"column":6,"line":9},"start":{"column":16,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"51","location":{"end":{"column":55,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" + this.end - \"]\"","status":"Survived"},{"id":"52","location":{"end":{"column":49,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start + \",\" - this.end","status":"Survived"},{"id":"53","location":{"end":{"column":38,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" + this.start - \",\"","status":"Survived"},{"id":"54","location":{"end":{"column":32,"line":8},"start":{"column":16,"line":8}},"mutatorName":"BinaryExpression","replacement":"\"[\" - this.start","status":"Survived"},{"id":"55","location":{"end":{"column":19,"line":8},"start":{"column":16,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"56","location":{"end":{"column":38,"line":8},"start":{"column":35,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"57","location":{"end":{"column":55,"line":8},"start":{"column":52,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"58","location":{"end":{"column":6,"line":27},"start":{"column":24,"line":25}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"59","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || this.start < interval.end","status":"Killed"},{"id":"60","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"61","location":{"end":{"column":70,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"62","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"63","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"64","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"65","location":{"end":{"column":41,"line":26},"start":{"column":16,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"66","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.end","status":"Survived"},{"id":"67","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.end","status":"Killed"},{"id":"68","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"69","location":{"end":{"column":70,"line":26},"start":{"column":45,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"70","location":{"end":{"column":6,"line":47},"start":{"column":24,"line":45}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"71","location":{"end":{"column":71,"line":46},"start":{"column":17,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start || interval.end <= this.end","status":"Killed"},{"id":"72","location":{"end":{"column":71,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"73","location":{"end":{"column":71,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"74","location":{"end":{"column":44,"line":46},"start":{"column":17,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start > this.start","status":"Killed"},{"id":"75","location":{"end":{"column":44,"line":46},"start":{"column":17,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.start < this.start","status":"Killed"},{"id":"76","location":{"end":{"column":44,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"77","location":{"end":{"column":44,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"78","location":{"end":{"column":71,"line":46},"start":{"column":48,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.end < this.end","status":"Killed"},{"id":"79","location":{"end":{"column":71,"line":46},"start":{"column":48,"line":46}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.end","status":"Killed"},{"id":"80","location":{"end":{"column":71,"line":46},"start":{"column":48,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"81","location":{"end":{"column":71,"line":46},"start":{"column":48,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"82","location":{"end":{"column":6,"line":90},"start":{"column":21,"line":65}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"83","location":{"end":{"column":37,"line":69},"start":{"column":12,"line":69}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"84","location":{"end":{"column":37,"line":69},"start":{"column":12,"line":69}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"85","location":{"end":{"column":37,"line":69},"start":{"column":12,"line":69}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Survived"},{"id":"87","location":{"end":{"column":10,"line":71},"start":{"column":39,"line":69}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"86","location":{"end":{"column":37,"line":69},"start":{"column":12,"line":69}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Killed"},{"id":"88","location":{"end":{"column":36,"line":70},"start":{"column":20,"line":70}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"89","location":{"end":{"column":44,"line":71},"start":{"column":19,"line":71}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"90","location":{"end":{"column":44,"line":71},"start":{"column":19,"line":71}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"91","location":{"end":{"column":44,"line":71},"start":{"column":19,"line":71}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"92","location":{"end":{"column":44,"line":71},"start":{"column":19,"line":71}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Killed"},{"id":"93","location":{"end":{"column":10,"line":73},"start":{"column":45,"line":71}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"94","location":{"end":{"column":34,"line":72},"start":{"column":19,"line":72}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"95","location":{"end":{"column":38,"line":75},"start":{"column":12,"line":75}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"96","location":{"end":{"column":38,"line":75},"start":{"column":12,"line":75}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"97","location":{"end":{"column":38,"line":75},"start":{"column":12,"line":75}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"98","location":{"end":{"column":38,"line":75},"start":{"column":12,"line":75}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"99","location":{"end":{"column":10,"line":77},"start":{"column":39,"line":75}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"100","location":{"end":{"column":10,"line":80},"start":{"column":14,"line":78}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"101","location":{"end":{"column":34,"line":82},"start":{"column":12,"line":82}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"102","location":{"end":{"column":34,"line":82},"start":{"column":12,"line":82}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"103","location":{"end":{"column":34,"line":82},"start":{"column":12,"line":82}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Survived"},{"id":"104","location":{"end":{"column":34,"line":82},"start":{"column":12,"line":82}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Killed"},{"id":"105","location":{"end":{"column":10,"line":84},"start":{"column":36,"line":82}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":10,"line":87},"start":{"column":13,"line":85}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"107","location":{"end":{"column":6,"line":126},"start":{"column":28,"line":108}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"108","location":{"end":{"column":69,"line":111},"start":{"column":12,"line":111}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"109","location":{"end":{"column":69,"line":111},"start":{"column":12,"line":111}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"110","location":{"end":{"column":69,"line":111},"start":{"column":12,"line":111}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || this.start < interval.start","status":"Killed"},{"id":"111","location":{"end":{"column":37,"line":111},"start":{"column":12,"line":111}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"112","location":{"end":{"column":37,"line":111},"start":{"column":12,"line":111}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"114","location":{"end":{"column":37,"line":111},"start":{"column":12,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"113","location":{"end":{"column":37,"line":111},"start":{"column":12,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"115","location":{"end":{"column":69,"line":111},"start":{"column":41,"line":111}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Survived"},{"id":"116","location":{"end":{"column":69,"line":111},"start":{"column":41,"line":111}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Killed"},{"id":"117","location":{"end":{"column":69,"line":111},"start":{"column":41,"line":111}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"118","location":{"end":{"column":69,"line":111},"start":{"column":41,"line":111}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"119","location":{"end":{"column":10,"line":117},"start":{"column":70,"line":111}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"120","location":{"end":{"column":46,"line":113},"start":{"column":35,"line":113}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"121","location":{"end":{"column":46,"line":113},"start":{"column":35,"line":113}},"mutatorName":"BinaryExpression","replacement":"i < this.end","status":"Killed"},{"id":"122","location":{"end":{"column":46,"line":113},"start":{"column":35,"line":113}},"mutatorName":"BinaryExpression","replacement":"i > this.end","status":"Killed"},{"id":"124","location":{"end":{"column":14,"line":116},"start":{"column":52,"line":113}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"125","location":{"end":{"column":36,"line":114},"start":{"column":20,"line":114}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"126","location":{"end":{"column":36,"line":114},"start":{"column":20,"line":114}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"127","location":{"end":{"column":36,"line":114},"start":{"column":20,"line":114}},"mutatorName":"BinaryExpression","replacement":"i >= interval.end","status":"Killed"},{"id":"128","location":{"end":{"column":36,"line":114},"start":{"column":20,"line":114}},"mutatorName":"BinaryExpression","replacement":"i <= interval.end","status":"Killed"},{"id":"129","location":{"end":{"column":46,"line":114},"start":{"column":37,"line":114}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"130","location":{"end":{"column":75,"line":117},"start":{"column":19,"line":117}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"132","location":{"end":{"column":75,"line":117},"start":{"column":19,"line":117}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || interval.start < this.start","status":"Killed"},{"id":"131","location":{"end":{"column":75,"line":117},"start":{"column":19,"line":117}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"133","location":{"end":{"column":44,"line":117},"start":{"column":19,"line":117}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Killed"},{"id":"134","location":{"end":{"column":44,"line":117},"start":{"column":19,"line":117}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"135","location":{"end":{"column":44,"line":117},"start":{"column":19,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"136","location":{"end":{"column":44,"line":117},"start":{"column":19,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"137","location":{"end":{"column":75,"line":117},"start":{"column":48,"line":117}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Survived"},{"id":"138","location":{"end":{"column":75,"line":117},"start":{"column":48,"line":117}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Killed"},{"id":"139","location":{"end":{"column":75,"line":117},"start":{"column":48,"line":117}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"140","location":{"end":{"column":75,"line":117},"start":{"column":48,"line":117}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"141","location":{"end":{"column":10,"line":123},"start":{"column":76,"line":117}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"142","location":{"end":{"column":43,"line":119},"start":{"column":27,"line":119}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"143","location":{"end":{"column":43,"line":119},"start":{"column":27,"line":119}},"mutatorName":"BinaryExpression","replacement":"j < interval.end","status":"Killed"},{"id":"144","location":{"end":{"column":43,"line":119},"start":{"column":27,"line":119}},"mutatorName":"BinaryExpression","replacement":"j > interval.end","status":"Killed"},{"id":"146","location":{"end":{"column":14,"line":122},"start":{"column":49,"line":119}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"147","location":{"end":{"column":30,"line":120},"start":{"column":20,"line":120}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"123","location":{"end":{"column":51,"line":113},"start":{"column":48,"line":113}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Timeout"},{"id":"148","location":{"end":{"column":30,"line":120},"start":{"column":20,"line":120}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"149","location":{"end":{"column":30,"line":120},"start":{"column":20,"line":120}},"mutatorName":"BinaryExpression","replacement":"j >= this.end","status":"Killed"},{"id":"152","location":{"end":{"column":28,"line":124},"start":{"column":12,"line":124}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"151","location":{"end":{"column":28,"line":124},"start":{"column":12,"line":124}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"154","location":{"end":{"column":6,"line":164},"start":{"column":25,"line":144}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"153","location":{"end":{"column":28,"line":124},"start":{"column":12,"line":124}},"mutatorName":"BinaryExpression","replacement":"newStart != null","status":"Killed"},{"id":"156","location":{"end":{"column":69,"line":145},"start":{"column":13,"line":145}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"155","location":{"end":{"column":69,"line":145},"start":{"column":13,"line":145}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"150","location":{"end":{"column":30,"line":120},"start":{"column":20,"line":120}},"mutatorName":"BinaryExpression","replacement":"j <= this.end","status":"Killed"},{"id":"157","location":{"end":{"column":69,"line":145},"start":{"column":13,"line":145}},"mutatorName":"BinaryExpression","replacement":"this.start == interval.start || this.end == interval.end","status":"Survived"},{"id":"158","location":{"end":{"column":41,"line":145},"start":{"column":13,"line":145}},"mutatorName":"BinaryExpression","replacement":"this.start != interval.start","status":"Killed"},{"id":"159","location":{"end":{"column":41,"line":145},"start":{"column":13,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"161","location":{"end":{"column":69,"line":145},"start":{"column":45,"line":145}},"mutatorName":"BinaryExpression","replacement":"this.end != interval.end","status":"Killed"},{"id":"160","location":{"end":{"column":41,"line":145},"start":{"column":13,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"162","location":{"end":{"column":69,"line":145},"start":{"column":45,"line":145}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"163","location":{"end":{"column":69,"line":145},"start":{"column":45,"line":145}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"164","location":{"end":{"column":35,"line":146},"start":{"column":12,"line":146}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"165","location":{"end":{"column":35,"line":146},"start":{"column":12,"line":146}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"145","location":{"end":{"column":48,"line":119},"start":{"column":45,"line":119}},"mutatorName":"PostfixUnaryExpression","replacement":"j--","status":"Timeout"},{"id":"166","location":{"end":{"column":10,"line":157},"start":{"column":36,"line":146}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"167","location":{"end":{"column":96,"line":148},"start":{"column":16,"line":148}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"168","location":{"end":{"column":96,"line":148},"start":{"column":16,"line":148}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"170","location":{"end":{"column":69,"line":148},"start":{"column":17,"line":148}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || interval.start > this.start","status":"Killed"},{"id":"171","location":{"end":{"column":69,"line":148},"start":{"column":17,"line":148}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"172","location":{"end":{"column":69,"line":148},"start":{"column":17,"line":148}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"173","location":{"end":{"column":40,"line":148},"start":{"column":17,"line":148}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"174","location":{"end":{"column":40,"line":148},"start":{"column":17,"line":148}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"175","location":{"end":{"column":40,"line":148},"start":{"column":17,"line":148}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"176","location":{"end":{"column":40,"line":148},"start":{"column":17,"line":148}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"177","location":{"end":{"column":69,"line":148},"start":{"column":44,"line":148}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"178","location":{"end":{"column":69,"line":148},"start":{"column":44,"line":148}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"169","location":{"end":{"column":96,"line":148},"start":{"column":16,"line":148}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start && interval.start > this.start || interval.end > this.end","status":"Killed"},{"id":"180","location":{"end":{"column":69,"line":148},"start":{"column":44,"line":148}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"179","location":{"end":{"column":69,"line":148},"start":{"column":44,"line":148}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"181","location":{"end":{"column":96,"line":148},"start":{"column":74,"line":148}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Survived"},{"id":"182","location":{"end":{"column":96,"line":148},"start":{"column":74,"line":148}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Killed"},{"id":"183","location":{"end":{"column":96,"line":148},"start":{"column":74,"line":148}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"184","location":{"end":{"column":96,"line":148},"start":{"column":74,"line":148}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"185","location":{"end":{"column":14,"line":150},"start":{"column":97,"line":148}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"186","location":{"end":{"column":113,"line":149},"start":{"column":24,"line":149}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"187","location":{"end":{"column":104,"line":150},"start":{"column":22,"line":150}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"188","location":{"end":{"column":104,"line":150},"start":{"column":22,"line":150}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"189","location":{"end":{"column":104,"line":150},"start":{"column":22,"line":150}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start && this.start > interval.start || this.end > interval.end","status":"Killed"},{"id":"190","location":{"end":{"column":77,"line":150},"start":{"column":23,"line":150}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || this.start > interval.start","status":"Killed"},{"id":"191","location":{"end":{"column":77,"line":150},"start":{"column":23,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"192","location":{"end":{"column":77,"line":150},"start":{"column":23,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"193","location":{"end":{"column":47,"line":150},"start":{"column":23,"line":150}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Survived"},{"id":"194","location":{"end":{"column":47,"line":150},"start":{"column":23,"line":150}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"195","location":{"end":{"column":47,"line":150},"start":{"column":23,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"196","location":{"end":{"column":47,"line":150},"start":{"column":23,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"197","location":{"end":{"column":77,"line":150},"start":{"column":51,"line":150}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"198","location":{"end":{"column":77,"line":150},"start":{"column":51,"line":150}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Killed"},{"id":"199","location":{"end":{"column":77,"line":150},"start":{"column":51,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"200","location":{"end":{"column":77,"line":150},"start":{"column":51,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"201","location":{"end":{"column":104,"line":150},"start":{"column":82,"line":150}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.end","status":"Survived"},{"id":"202","location":{"end":{"column":104,"line":150},"start":{"column":82,"line":150}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.end","status":"Killed"},{"id":"203","location":{"end":{"column":104,"line":150},"start":{"column":82,"line":150}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"204","location":{"end":{"column":104,"line":150},"start":{"column":82,"line":150}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"205","location":{"end":{"column":14,"line":152},"start":{"column":105,"line":150}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"206","location":{"end":{"column":113,"line":151},"start":{"column":24,"line":151}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"207","location":{"end":{"column":102,"line":152},"start":{"column":22,"line":152}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"208","location":{"end":{"column":102,"line":152},"start":{"column":22,"line":152}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"209","location":{"end":{"column":102,"line":152},"start":{"column":22,"line":152}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start && interval.start > this.start || interval.end < this.end","status":"Survived"},{"id":"210","location":{"end":{"column":75,"line":152},"start":{"column":23,"line":152}},"mutatorName":"BinaryExpression","replacement":"this.end > interval.start || interval.start > this.start","status":"Survived"},{"id":"211","location":{"end":{"column":75,"line":152},"start":{"column":23,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"212","location":{"end":{"column":75,"line":152},"start":{"column":23,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"213","location":{"end":{"column":46,"line":152},"start":{"column":23,"line":152}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.start","status":"Survived"},{"id":"214","location":{"end":{"column":46,"line":152},"start":{"column":23,"line":152}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.start","status":"Killed"},{"id":"215","location":{"end":{"column":46,"line":152},"start":{"column":23,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"216","location":{"end":{"column":46,"line":152},"start":{"column":23,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"217","location":{"end":{"column":75,"line":152},"start":{"column":50,"line":152}},"mutatorName":"BinaryExpression","replacement":"interval.start >= this.start","status":"Survived"},{"id":"218","location":{"end":{"column":75,"line":152},"start":{"column":50,"line":152}},"mutatorName":"BinaryExpression","replacement":"interval.start <= this.start","status":"Killed"},{"id":"219","location":{"end":{"column":75,"line":152},"start":{"column":50,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"220","location":{"end":{"column":75,"line":152},"start":{"column":50,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"221","location":{"end":{"column":102,"line":152},"start":{"column":80,"line":152}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.end","status":"Survived"},{"id":"222","location":{"end":{"column":102,"line":152},"start":{"column":80,"line":152}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.end","status":"Killed"},{"id":"223","location":{"end":{"column":102,"line":152},"start":{"column":80,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"224","location":{"end":{"column":102,"line":152},"start":{"column":80,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"225","location":{"end":{"column":14,"line":154},"start":{"column":103,"line":152}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"226","location":{"end":{"column":109,"line":153},"start":{"column":24,"line":153}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"227","location":{"end":{"column":106,"line":154},"start":{"column":23,"line":154}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"228","location":{"end":{"column":106,"line":154},"start":{"column":23,"line":154}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"229","location":{"end":{"column":106,"line":154},"start":{"column":23,"line":154}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start && this.start > interval.start || this.end < interval.end","status":"Survived"},{"id":"230","location":{"end":{"column":78,"line":154},"start":{"column":24,"line":154}},"mutatorName":"BinaryExpression","replacement":"interval.end > this.start || this.start > interval.start","status":"Survived"},{"id":"231","location":{"end":{"column":78,"line":154},"start":{"column":24,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"232","location":{"end":{"column":78,"line":154},"start":{"column":24,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"233","location":{"end":{"column":48,"line":154},"start":{"column":24,"line":154}},"mutatorName":"BinaryExpression","replacement":"interval.end >= this.start","status":"Survived"},{"id":"234","location":{"end":{"column":48,"line":154},"start":{"column":24,"line":154}},"mutatorName":"BinaryExpression","replacement":"interval.end <= this.start","status":"Killed"},{"id":"235","location":{"end":{"column":48,"line":154},"start":{"column":24,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"236","location":{"end":{"column":48,"line":154},"start":{"column":24,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"237","location":{"end":{"column":78,"line":154},"start":{"column":52,"line":154}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Survived"},{"id":"239","location":{"end":{"column":78,"line":154},"start":{"column":52,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"238","location":{"end":{"column":78,"line":154},"start":{"column":52,"line":154}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Killed"},{"id":"240","location":{"end":{"column":78,"line":154},"start":{"column":52,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"241","location":{"end":{"column":106,"line":154},"start":{"column":83,"line":154}},"mutatorName":"BinaryExpression","replacement":"this.end <= interval.end","status":"Survived"},{"id":"242","location":{"end":{"column":106,"line":154},"start":{"column":83,"line":154}},"mutatorName":"BinaryExpression","replacement":"this.end >= interval.end","status":"Killed"},{"id":"243","location":{"end":{"column":106,"line":154},"start":{"column":83,"line":154}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"244","location":{"end":{"column":106,"line":154},"start":{"column":83,"line":154}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"245","location":{"end":{"column":14,"line":156},"start":{"column":107,"line":154}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"246","location":{"end":{"column":117,"line":155},"start":{"column":24,"line":155}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"247","location":{"end":{"column":10,"line":163},"start":{"column":14,"line":157}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"248","location":{"end":{"column":43,"line":158},"start":{"column":16,"line":158}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"249","location":{"end":{"column":43,"line":158},"start":{"column":16,"line":158}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"250","location":{"end":{"column":43,"line":158},"start":{"column":16,"line":158}},"mutatorName":"BinaryExpression","replacement":"this.start <= interval.start","status":"Survived"},{"id":"251","location":{"end":{"column":43,"line":158},"start":{"column":16,"line":158}},"mutatorName":"BinaryExpression","replacement":"this.start >= interval.start","status":"Killed"},{"id":"252","location":{"end":{"column":14,"line":160},"start":{"column":44,"line":158}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"253","location":{"end":{"column":39,"line":159},"start":{"column":24,"line":159}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"254","location":{"end":{"column":14,"line":162},"start":{"column":18,"line":160}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"255","location":{"end":{"column":39,"line":161},"start":{"column":24,"line":161}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"}],"source":"class Interval {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end\n    }\n\n    toString() {\n        return \"[\" + this.start + \",\" + this.end + \"]\";\n    }\n\n    /**\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                  âââââââââââââââââââââââââââââ\n     *      interval1.overlaps(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                       âââââââââââââââââââââââââââââ\n     *      interval1.overlaps(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    overlaps(interval) {\n        return this.end > interval.start && this.start < interval.end;\n    }\n\n    /**\n     * Retourne true si cet interval contient le paramÃ¨tre interval\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                  âââââââââââââ\n     *      interval1.includes(interval2) => true\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                              âââââââââââââââââââââââââââââ\n     *      interval1.includes(interval2) => false\n     *\n     * @param {Interval} interval\n     * @returns {boolean}\n     */\n    includes(interval) {\n        return (interval.start>= this.start && interval.end<= this.end);\n    };\n\n    /**\n     * Retourne l'union de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.union(interval2) =>        âââââââââââââââââââââââââââââââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.union(interval2) =>        âââââââââââââââââââââââââ   âââââââââââââââââââââââââââââ\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    union(interval) {\n        let newStart = this.start;\n        let newEnd = this.end;\n        \n        if(this.end < interval.start ){\n            return [this, interval];\n        }else if( interval.end < this.start){\n            return[interval,this];\n        } \t\n                \n        if(interval.start> this.start){\n            newStart= this.start;\n        }\n        else {\n            newStart= interval.start;\n        }\n        \n        if(interval.end< this.end) {\n            newEnd= this.end;\n        }\n        else{\n            newEnd= interval.end;\n        }\n        \n        return new Interval(newStart,newEnd);\n    };\n\n    /**\n     * Retourne l'intersection de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.intersection(interval2) =>                     âââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.intersection(interval2) => <tableau vide>\n     *\n     * @param {Interval} interval\n     * @returns {Interval|null}\n     */\n    intersection(interval) {\n        let newStart = null;\n        let newEnd = null;\t\n        if(this.end > interval.start && this.start < interval. start){\n            newStart = interval.start;\n            for (let i= newStart; i<=this.end; i++){\n                if(i > interval.end){ break;}\n                newEnd = i;\n            }\n        }else if (interval.end > this.start && interval.start < this.start){\n            newStart = this.start;\n            for(let j=0 ; j<= interval.end; j++){\n                if(j>this.end) break;\n                newEnd = j ;\n            }\n        }\n        if(newStart == null) return null;\n        return new Interval(newStart,newEnd);\n    };\n\n    /**\n     * Retourne l'exclusion de deux intervals\n     *\n     * Exemple 1 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                              âââââââââââââ\n     *      interval1.exclusion(interval2) =>    ââââââââââââââââââââ     ââââââââ\n     *\n     * Exemple 2 :\n     *      interval1 =                          âââââââââââââââââââââââââ\n     *      interval2 =                                                      âââââââââââââââââââââââââââââ\n     *      interval1.exclusion(interval2) =>    âââââââââââââââââââââââââ   âââââââââââââââââââââââââââââ\n     *\n     * @param {Interval} interval\n     * @returns {Interval[]}\n     */\n    exclusion(interval) {\n        if (this.start == interval.start && this.end == interval.end) return null;\n        if(this.overlaps(interval)){\n            let intersection = this.intersection(interval);\n            if((this.end>interval.start && interval.start>this.start) && interval.end> this.end){\n                return [new Interval(this.start,intersection.start),new Interval(intersection.end,interval.end)];\n            }else if((interval.end> this.start && this.start> interval.start) && this.end> interval.end){\n                return [new Interval(interval.start,intersection.start),new Interval(intersection.end,this.end)];\n            }else if((this.end>interval.start && interval.start>this.start) && interval.end< this.end){\n                return [new Interval(this.start,intersection.start),new Interval(intersection.end,this.end)]\n            }else if ((interval.end> this.start && this.start> interval.start) && this.end < interval.end){\n                return [new Interval(interval.start,intersection.start),new Interval(intersection.end,interval.end)];\n            }\n        }else{\n            if(this.start < interval.start){\n                return [this,interval];\n            }else{\n                return [interval,this];\n            }\n        }\n    };\n}\n\nmodule.exports = Interval;\n"},"C:\\Users\\ybett\\testsProf\\Tp_Node\\src\\math.js":{"language":"javascript","mutants":[{"id":"256","location":{"end":{"column":2,"line":16},"start":{"column":25,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"257","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"258","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"259","location":{"end":{"column":16,"line":3},"start":{"column":9,"line":3}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"260","location":{"end":{"column":6,"line":5},"start":{"column":18,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"261","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"262","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"263","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n > 3000","status":"Killed"},{"id":"264","location":{"end":{"column":18,"line":7},"start":{"column":9,"line":7}},"mutatorName":"BinaryExpression","replacement":"n < 3000","status":"Killed"},{"id":"265","location":{"end":{"column":6,"line":9},"start":{"column":20,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"266","location":{"end":{"column":28,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"267","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"268","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"269","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"270","location":{"end":{"column":14,"line":11},"start":{"column":9,"line":11}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"271","location":{"end":{"column":6,"line":13},"start":{"column":16,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"272","location":{"end":{"column":30,"line":12},"start":{"column":15,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"273","location":{"end":{"column":37,"line":15},"start":{"column":12,"line":15}},"mutatorName":"BinaryExpression","replacement":"n / Util.factorial(n - 1)","status":"Killed"},{"id":"274","location":{"end":{"column":36,"line":15},"start":{"column":31,"line":15}},"mutatorName":"BinaryExpression","replacement":"n + 1","status":"Killed"},{"id":"275","location":{"end":{"column":2,"line":37},"start":{"column":29,"line":26}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"276","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"277","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"278","location":{"end":{"column":27,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n === 1 && n === 0","status":"Killed"},{"id":"279","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 1","status":"Killed"},{"id":"280","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"281","location":{"end":{"column":16,"line":27},"start":{"column":9,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"283","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"282","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"BinaryExpression","replacement":"n !== 0","status":"Killed"},{"id":"284","location":{"end":{"column":27,"line":27},"start":{"column":20,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"285","location":{"end":{"column":6,"line":29},"start":{"column":29,"line":27}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"287","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"286","location":{"end":{"column":21,"line":28},"start":{"column":16,"line":28}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"288","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"289","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n <= 0","status":"Survived"},{"id":"290","location":{"end":{"column":14,"line":30},"start":{"column":9,"line":30}},"mutatorName":"BinaryExpression","replacement":"n >= 0","status":"Killed"},{"id":"291","location":{"end":{"column":6,"line":32},"start":{"column":16,"line":30}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"292","location":{"end":{"column":50,"line":31},"start":{"column":15,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"293","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"294","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i <= n","status":"Killed"},{"id":"295","location":{"end":{"column":26,"line":33},"start":{"column":21,"line":33}},"mutatorName":"BinaryExpression","replacement":"i >= n","status":"Killed"},{"id":"296","location":{"end":{"column":31,"line":33},"start":{"column":28,"line":33}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Killed"},{"id":"297","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"298","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"299","location":{"end":{"column":24,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n % i !== 0","status":"Killed"},{"id":"300","location":{"end":{"column":18,"line":34},"start":{"column":13,"line":34}},"mutatorName":"BinaryExpression","replacement":"n * i","status":"Killed"},{"id":"301","location":{"end":{"column":38,"line":34},"start":{"column":33,"line":34}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"302","location":{"end":{"column":16,"line":35},"start":{"column":12,"line":35}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"303","location":{"end":{"column":2,"line":63},"start":{"column":29,"line":49}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"304","location":{"end":{"column":14,"line":50},"start":{"column":8,"line":50}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"305","location":{"end":{"column":14,"line":50},"start":{"column":8,"line":50}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"306","location":{"end":{"column":14,"line":50},"start":{"column":8,"line":50}},"mutatorName":"BinaryExpression","replacement":"n != 2","status":"Killed"},{"id":"307","location":{"end":{"column":6,"line":52},"start":{"column":15,"line":50}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"308","location":{"end":{"column":13,"line":53},"start":{"column":8,"line":53}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"309","location":{"end":{"column":13,"line":53},"start":{"column":8,"line":53}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"310","location":{"end":{"column":13,"line":53},"start":{"column":8,"line":53}},"mutatorName":"BinaryExpression","replacement":"n <= 2","status":"Survived"},{"id":"311","location":{"end":{"column":13,"line":53},"start":{"column":8,"line":53}},"mutatorName":"BinaryExpression","replacement":"n >= 2","status":"Killed"},{"id":"312","location":{"end":{"column":6,"line":55},"start":{"column":14,"line":53}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"313","location":{"end":{"column":50,"line":54},"start":{"column":15,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"314","location":{"end":{"column":23,"line":56},"start":{"column":8,"line":56}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"315","location":{"end":{"column":23,"line":56},"start":{"column":8,"line":56}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"316","location":{"end":{"column":6,"line":58},"start":{"column":24,"line":56}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"317","location":{"end":{"column":38,"line":57},"start":{"column":16,"line":57}},"mutatorName":"BinaryExpression","replacement":"n - Util.sumPrime(n - 1)","status":"Killed"},{"id":"319","location":{"end":{"column":6,"line":61},"start":{"column":9,"line":59}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"318","location":{"end":{"column":37,"line":57},"start":{"column":34,"line":57}},"mutatorName":"BinaryExpression","replacement":"n + 1","status":"Killed"},{"id":"320","location":{"end":{"column":33,"line":60},"start":{"column":30,"line":60}},"mutatorName":"BinaryExpression","replacement":"n + 1","status":"Killed"},{"id":"321","location":{"end":{"column":2,"line":94},"start":{"column":29,"line":77}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"322","location":{"end":{"column":26,"line":79},"start":{"column":20,"line":79}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"323","location":{"end":{"column":26,"line":79},"start":{"column":20,"line":79}},"mutatorName":"BinaryExpression","replacement":"i < n","status":"Killed"},{"id":"324","location":{"end":{"column":26,"line":79},"start":{"column":20,"line":79}},"mutatorName":"BinaryExpression","replacement":"i > n","status":"Killed"},{"id":"326","location":{"end":{"column":6,"line":92},"start":{"column":33,"line":79}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"327","location":{"end":{"column":34,"line":80},"start":{"column":13,"line":80}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"328","location":{"end":{"column":34,"line":80},"start":{"column":13,"line":80}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"329","location":{"end":{"column":34,"line":80},"start":{"column":13,"line":80}},"mutatorName":"BinaryExpression","replacement":"i % 3 == 0 || i % 5 == 0","status":"Killed"},{"id":"330","location":{"end":{"column":22,"line":80},"start":{"column":13,"line":80}},"mutatorName":"BinaryExpression","replacement":"i % 3 != 0","status":"Killed"},{"id":"331","location":{"end":{"column":22,"line":80},"start":{"column":13,"line":80}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"332","location":{"end":{"column":22,"line":80},"start":{"column":13,"line":80}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"333","location":{"end":{"column":17,"line":80},"start":{"column":13,"line":80}},"mutatorName":"BinaryExpression","replacement":"i * 3","status":"Killed"},{"id":"334","location":{"end":{"column":34,"line":80},"start":{"column":26,"line":80}},"mutatorName":"BinaryExpression","replacement":"i % 5 != 0","status":"Killed"},{"id":"335","location":{"end":{"column":34,"line":80},"start":{"column":26,"line":80}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"336","location":{"end":{"column":34,"line":80},"start":{"column":26,"line":80}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"337","location":{"end":{"column":29,"line":80},"start":{"column":26,"line":80}},"mutatorName":"BinaryExpression","replacement":"i * 5","status":"Killed"},{"id":"338","location":{"end":{"column":10,"line":82},"start":{"column":35,"line":80}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"339","location":{"end":{"column":36,"line":81},"start":{"column":26,"line":81}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"340","location":{"end":{"column":23,"line":83},"start":{"column":17,"line":83}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"341","location":{"end":{"column":23,"line":83},"start":{"column":17,"line":83}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"325","location":{"end":{"column":32,"line":79},"start":{"column":29,"line":79}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Timeout"},{"id":"342","location":{"end":{"column":23,"line":83},"start":{"column":17,"line":83}},"mutatorName":"BinaryExpression","replacement":"i % 3 != 0","status":"Killed"},{"id":"343","location":{"end":{"column":20,"line":83},"start":{"column":17,"line":83}},"mutatorName":"BinaryExpression","replacement":"i * 3","status":"Killed"},{"id":"344","location":{"end":{"column":10,"line":85},"start":{"column":24,"line":83}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"346","location":{"end":{"column":23,"line":86},"start":{"column":17,"line":86}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"347","location":{"end":{"column":23,"line":86},"start":{"column":17,"line":86}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"348","location":{"end":{"column":23,"line":86},"start":{"column":17,"line":86}},"mutatorName":"BinaryExpression","replacement":"i % 5 != 0","status":"Killed"},{"id":"349","location":{"end":{"column":20,"line":86},"start":{"column":17,"line":86}},"mutatorName":"BinaryExpression","replacement":"i * 5","status":"Killed"},{"id":"350","location":{"end":{"column":10,"line":88},"start":{"column":24,"line":86}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"351","location":{"end":{"column":32,"line":87},"start":{"column":26,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"352","location":{"end":{"column":10,"line":91},"start":{"column":13,"line":89}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"353","location":{"end":{"column":2,"line":122},"start":{"column":33,"line":105}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"345","location":{"end":{"column":32,"line":84},"start":{"column":26,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"354","location":{"end":{"column":21,"line":107},"start":{"column":19,"line":107}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"355","location":{"end":{"column":34,"line":109},"start":{"column":19,"line":109}},"mutatorName":"ForStatement","replacement":"false","status":"Killed"},{"id":"356","location":{"end":{"column":34,"line":109},"start":{"column":19,"line":109}},"mutatorName":"BinaryExpression","replacement":"i <= phrase.length","status":"Killed"},{"id":"357","location":{"end":{"column":34,"line":109},"start":{"column":19,"line":109}},"mutatorName":"BinaryExpression","replacement":"i >= phrase.length","status":"Killed"},{"id":"358","location":{"end":{"column":39,"line":109},"start":{"column":36,"line":109}},"mutatorName":"PrefixUnaryExpression","replacement":"--i","status":"Killed"},{"id":"359","location":{"end":{"column":6,"line":119},"start":{"column":5,"line":110}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"360","location":{"end":{"column":29,"line":111},"start":{"column":13,"line":111}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"362","location":{"end":{"column":29,"line":111},"start":{"column":13,"line":111}},"mutatorName":"BinaryExpression","replacement":"phrase[i] == \" \"","status":"Killed"},{"id":"361","location":{"end":{"column":29,"line":111},"start":{"column":13,"line":111}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"363","location":{"end":{"column":29,"line":111},"start":{"column":26,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"364","location":{"end":{"column":10,"line":114},"start":{"column":9,"line":112}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"365","location":{"end":{"column":69,"line":113},"start":{"column":44,"line":113}},"mutatorName":"BinaryExpression","replacement":"phrase[i].charCodeAt(0) - 1","status":"Killed"},{"id":"366","location":{"end":{"column":10,"line":118},"start":{"column":9,"line":116}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"367","location":{"end":{"column":27,"line":117},"start":{"column":24,"line":117}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"368","location":{"end":{"column":2,"line":148},"start":{"column":30,"line":137}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"369","location":{"end":{"column":32,"line":139},"start":{"column":18,"line":139}},"mutatorName":"ForStatement","replacement":"false","status":"Survived"},{"id":"370","location":{"end":{"column":32,"line":139},"start":{"column":18,"line":139}},"mutatorName":"BinaryExpression","replacement":"i <= array.length","status":"Survived"},{"id":"371","location":{"end":{"column":32,"line":139},"start":{"column":18,"line":139}},"mutatorName":"BinaryExpression","replacement":"i >= array.length","status":"Survived"},{"id":"372","location":{"end":{"column":36,"line":139},"start":{"column":33,"line":139}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Survived"},{"id":"373","location":{"end":{"column":6,"line":146},"start":{"column":37,"line":139}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"374","location":{"end":{"column":38,"line":141},"start":{"column":24,"line":141}},"mutatorName":"ForStatement","replacement":"false","status":"Survived"},{"id":"375","location":{"end":{"column":22,"line":141},"start":{"column":19,"line":141}},"mutatorName":"BinaryExpression","replacement":"i - 1","status":"Survived"},{"id":"376","location":{"end":{"column":38,"line":141},"start":{"column":24,"line":141}},"mutatorName":"BinaryExpression","replacement":"j <= array.length","status":"Survived"},{"id":"377","location":{"end":{"column":38,"line":141},"start":{"column":24,"line":141}},"mutatorName":"BinaryExpression","replacement":"j >= array.length","status":"Survived"},{"id":"378","location":{"end":{"column":42,"line":141},"start":{"column":39,"line":141}},"mutatorName":"PostfixUnaryExpression","replacement":"j--","status":"Survived"},{"id":"379","location":{"end":{"column":10,"line":145},"start":{"column":43,"line":141}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"380","location":{"end":{"column":34,"line":142},"start":{"column":16,"line":142}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"381","location":{"end":{"column":34,"line":142},"start":{"column":16,"line":142}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"382","location":{"end":{"column":34,"line":142},"start":{"column":16,"line":142}},"mutatorName":"BinaryExpression","replacement":"variable != array[j]","status":"Survived"},{"id":"383","location":{"end":{"column":14,"line":144},"start":{"column":35,"line":142}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"384","location":{"end":{"column":22,"line":143},"start":{"column":17,"line":143}},"mutatorName":"PostfixUnaryExpression","replacement":"res--","status":"Survived"},{"id":"385","location":{"end":{"column":2,"line":169},"start":{"column":31,"line":150}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"386","location":{"end":{"column":38,"line":155},"start":{"column":22,"line":155}},"mutatorName":"ForStatement","replacement":"false","status":"Survived"},{"id":"387","location":{"end":{"column":38,"line":155},"start":{"column":22,"line":155}},"mutatorName":"BinaryExpression","replacement":"i <= array.length","status":"Survived"},{"id":"388","location":{"end":{"column":38,"line":155},"start":{"column":22,"line":155}},"mutatorName":"BinaryExpression","replacement":"i >= array.length","status":"Survived"},{"id":"389","location":{"end":{"column":43,"line":155},"start":{"column":40,"line":155}},"mutatorName":"PostfixUnaryExpression","replacement":"i--","status":"Survived"},{"id":"390","location":{"end":{"column":6,"line":163},"start":{"column":46,"line":155}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"391","location":{"end":{"column":37,"line":156},"start":{"column":14,"line":156}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"392","location":{"end":{"column":37,"line":156},"start":{"column":14,"line":156}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"393","location":{"end":{"column":37,"line":156},"start":{"column":14,"line":156}},"mutatorName":"BinaryExpression","replacement":"array[i] !== array[i - 1]","status":"Survived"},{"id":"394","location":{"end":{"column":36,"line":156},"start":{"column":33,"line":156}},"mutatorName":"BinaryExpression","replacement":"i + 1","status":"Survived"},{"id":"395","location":{"end":{"column":19,"line":157},"start":{"column":13,"line":157}},"mutatorName":"PostfixUnaryExpression","replacement":"temp--","status":"Survived"},{"id":"396","location":{"end":{"column":10,"line":161},"start":{"column":14,"line":158}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"397","location":{"end":{"column":37,"line":159},"start":{"column":22,"line":159}},"mutatorName":"BinaryExpression","replacement":"temp * (temp - 1) * 2","status":"Survived"},{"id":"398","location":{"end":{"column":35,"line":159},"start":{"column":22,"line":159}},"mutatorName":"BinaryExpression","replacement":"temp / (temp - 1)","status":"Survived"},{"id":"399","location":{"end":{"column":34,"line":159},"start":{"column":28,"line":159}},"mutatorName":"BinaryExpression","replacement":"temp + 1","status":"Survived"},{"id":"400","location":{"end":{"column":16,"line":164},"start":{"column":8,"line":164}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"401","location":{"end":{"column":16,"line":164},"start":{"column":8,"line":164}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"402","location":{"end":{"column":16,"line":164},"start":{"column":8,"line":164}},"mutatorName":"BinaryExpression","replacement":"temp >= 1","status":"Survived"},{"id":"403","location":{"end":{"column":16,"line":164},"start":{"column":8,"line":164}},"mutatorName":"BinaryExpression","replacement":"temp <= 1","status":"Survived"},{"id":"404","location":{"end":{"column":6,"line":166},"start":{"column":18,"line":164}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"405","location":{"end":{"column":33,"line":165},"start":{"column":18,"line":165}},"mutatorName":"BinaryExpression","replacement":"temp * (temp - 1) * 2","status":"Survived"},{"id":"406","location":{"end":{"column":31,"line":165},"start":{"column":18,"line":165}},"mutatorName":"BinaryExpression","replacement":"temp / (temp - 1)","status":"Survived"},{"id":"407","location":{"end":{"column":30,"line":165},"start":{"column":24,"line":165}},"mutatorName":"BinaryExpression","replacement":"temp + 1","status":"Survived"}],"source":"let Util = {};\nUtil.factorial = (n) => {\n    if (n === 0) {\n        return 1;\n    }\n\n    if (n >= 3000) {\n        throw 'n too large'\n    }\n\n    if (n < 0) {\n        throw 'n is negative'\n    }\n\n    return n * Util.factorial(n - 1);\n};\n\n/**\n * DÃ©termine si n est un nombre premier.\n * Util.isPrime(5) => false\n * Util.isPrime(6) => true\n *\n * @param {number} n\n * @returns {boolean}\n */\nUtil.isPrime = function (n) {\n    if (n === 1 || n === 0) {\n        return false;\n    }\n    if (n < 0) {\n        throw 'Unable to compute prime for n < 0'\n    }\n    for (var i = 2; i < n; i++)\n        if (n % i === 0) return false;\n    return true;\n\n};\n\n\n/**\n * Additionne l'ensemble des nombres premiers de 2 Ã  n\n *\n * Util.sumPrime(6) = 2 + 3 + 5 = 10\n * Util.sumPrime(8) = 2 + 3 + 5 + 7 = 17\n *\n * @param {number} n\n * @returns {number}\n */\nUtil.sumPrime = function(n) {\n    if(n == 2){\n        return 2;\n    }\n    if(n < 2){\n        throw 'Unable to compute prime for n < 2';\n    }\n    if(Util.isPrime(n)){\n        return n + Util.sumPrime(n-1);\n    }\n    else{\n        return Util.sumPrime(n-1);\n    }\n\n};\n\n/**\n * Cette mÃ©thode doit retourner un tableau de 1 Ã  n tel que:\n * - Pour les nombres multiples de 3, les remplacer par \"Fizz\"\n * - Pour les nombres multiples de 5, les remplacer par \"Buzz\"\n * - Pour les nombres multiples de 3 et 5, les remplacer par \"FizzBuzz\"\n *\n * Exp :\n * Util.fizzBuzz(15) => [1, 2, \"Fizz\", 4, \"Buzz\", \"Fizz\", 7, 8, \"Fizz\", \"Buzz\", 11, \"Fizz\", 13, 14, \"FizzBuzz\"]\n *\n * @param {number} n\n * @returns {array}\n */\nUtil.fizzBuzz = function(n) {\n    var tableau = [];\n    for(let i = 1; i <= n ; i++){\n        if( i% 3 == 0 && i%5 == 0){\n            tableau.push(\"FizzBuzz\");\n        }\n        else if(i%3==0){\n            tableau.push(\"Fizz\");\n        }\n        else if(i%5==0){\n            tableau.push(\"Buzz\");\n        }\n        else{\n            tableau.push(i);\n        }\n    }\n    return tableau;\n};\n\n/**\n * Chiffre une phrase selon la rÃ¨gle suivante : Les A deviennent des B, les B des C, etc.\n *\n * Exp :\n * Util.cipher(\"Test Unitaire\") => \"Uftu Vojubjsf\"\n *\n * @param phrase\n * @returns {string}\n */\nUtil.cipher = function (phrase) {\n\n    let phrase2 = \"\";\n\n    for (let i=0; i<phrase.length; ++i)\n    {\n        if (phrase[i] != \" \")\n        {\n            phrase2 += String.fromCharCode(phrase[i].charCodeAt(0)+1);\n        }\n        else\n        {\n            phrase2 += \" \";\n        }\n    }\n\n    return (phrase2)\n};\n\n\n/**\n * Retourne le nombre de paires dans un tableau\n *\n * Exp :\n *\n * Util.pairs([3,3]) => 1\n * Util.pairs([3,3,5,]) => 1\n * Util.pairs([3,3,5,5,5]) => 4\n *\n * @param array\n * @return int\n */\nUtil.pairs = function(array) {\n    let res=0;\n    for(let i=0; i<array.length;i++){\n        let variable=array[i];\n        for(let j=i+1; j<array.length;j++){\n            if(variable==array[j]){\n                res++;\n            }\n        }\n    }\n    return res;\n};\n\nUtil.pairs2 = function(array) {\n    let count = 0;\n    let temp = 1;\n\n    array.sort();\n    for ( var i = 1; i < array.length; i++ ) {\n        if ( array[i] === array[i-1] )\n            temp++;\n        else {\n            count += temp*(temp-1)/2\n            temp = 1;\n        }\n        \n    }\n    if(temp > 1 ){\n        count += temp*(temp-1)/2\n    }\n\n    return count;\n};\n\nmodule.exports = Util;\n\n"},"C:\\Users\\ybett\\testsProf\\Tp_Node\\src\\test-script.js":{"language":"javascript","mutants":[{"id":"408","location":{"end":{"column":51,"line":1},"start":{"column":32,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"409","location":{"end":{"column":26,"line":2},"start":{"column":20,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"410","location":{"end":{"column":2,"line":12},"start":{"column":17,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"411","location":{"end":{"column":9,"line":8},"start":{"column":5,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"412","location":{"end":{"column":11,"line":9},"start":{"column":5,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"413","location":{"end":{"column":19,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"414","location":{"end":{"column":12,"line":10},"start":{"column":5,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"416","location":{"end":{"column":30,"line":11},"start":{"column":18,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"415","location":{"end":{"column":15,"line":11},"start":{"column":5,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const BookRepository = require('./book.repository');\nconst db = require('./db')\n\nconst repository = new BookRepository(db);\n\n\nrepository.save({\n    'id' : 1,\n    \"name\" :\"test\",\n    'price' :6.1,\n    \"added_at\" : '2019-01-01'\n});"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};